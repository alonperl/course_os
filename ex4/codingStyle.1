CacheData.cpp(13, 19):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::stringRealPath) in impl file.}
CacheData.cpp(27, 12):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::CacheData) in impl file.}
CacheData.cpp(29, 0):  indent_tab {Do not use space for indent}
CacheData.cpp(30, 0):  indent_tab {Do not use space for indent}
CacheData.cpp(30, 30):  opeartor_spaces {Provide spaces b/w operator '+'}
CacheData.cpp(30, 34):  opeartor_spaces {Provide spaces b/w operator '+'}
CacheData.cpp(31, 0):  indent_tab {Do not use space for indent}
CacheData.cpp(41, 13):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::~CacheData) in impl file.}
CacheData.cpp(54, 19):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::absolutePath) in impl file.}
CacheData.cpp(56, 0):  indent_tab {Do not use space for indent}
CacheData.cpp(60, 23):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::readBlockFromDisk) in impl file.}
CacheData.cpp(93, 17):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::pushDataBlock) in impl file.}
CacheData.cpp(100, 17):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::log) in impl file.}
CacheData.cpp(102, 6):  opeartor_spaces {Provide spaces b/w operator '<<'}
CacheData.cpp(102, 14):  opeartor_spaces {Provide spaces b/w operator '<<'}
CacheData.cpp(113, 7):  opeartor_spaces {Provide spaces b/w operator '<<'}
CacheData.cpp(113, 32):  opeartor_spaces {Provide spaces b/w operator '<<'}
CacheData.cpp(118, 17):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::deleteLeastUsedBlock) in impl file.}
CacheData.cpp(132, 17):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::renameCachedBlocks) in impl file.}
CacheData.cpp(148, 26):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::cacheSize) in impl file.}
CacheData.cpp(153, 19):  func_comment_imp {Doxygen Comment should be provided in front of function (CacheData::_blockKey) in impl file.}
CacheData.hpp(29, 1):  class_comment {Doxygen Comment should be provided in front of class def(CacheData).}
CacheData.hpp(32, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(33, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(34, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(36, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(37, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(38, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(39, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(40, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(41, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(42, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(44, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(45, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(47, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(48, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(49, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(50, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(52, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(54, 0):  indent_tab {Do not use space for indent}
CacheData.hpp(56, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(107, 5):  func_name_special {Function name(caching_getattr) should not contains special characters or underbars}
CachingFileSystem.cpp(111, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(144, 5):  func_name_special {Function name(caching_fgetattr) should not contains special characters or underbars}
CachingFileSystem.cpp(148, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(170, 5):  func_name_special {Function name(caching_access) should not contains special characters or underbars}
CachingFileSystem.cpp(174, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(206, 5):  func_name_special {Function name(caching_open) should not contains special characters or underbars}
CachingFileSystem.cpp(210, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(251, 5):  func_name_special {Function name(caching_read) should not contains special characters or underbars}
CachingFileSystem.cpp(252, 3):  align_long_param_list {Incorrect align on long parameter list in front of 'struct', it should be aligen in column 18.}
CachingFileSystem.cpp(256, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(261, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(304, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(375, 5):  func_name_special {Function name(caching_flush) should not contains special characters or underbars}
CachingFileSystem.cpp(379, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(382, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(403, 5):  func_name_special {Function name(caching_release) should not contains special characters or underbars}
CachingFileSystem.cpp(407, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(423, 5):  func_name_special {Function name(caching_opendir) should not contains special characters or underbars}
CachingFileSystem.cpp(427, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(468, 5):  func_name_special {Function name(caching_readdir) should not contains special characters or underbars}
CachingFileSystem.cpp(469, 3):  align_long_param_list {Incorrect align on long parameter list in front of 'struct', it should be aligen in column 21.}
CachingFileSystem.cpp(473, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(511, 5):  func_name_special {Function name(caching_releasedir) should not contains special characters or underbars}
CachingFileSystem.cpp(515, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(517, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(528, 5):  func_name_special {Function name(caching_rename) should not contains special characters or underbars}
CachingFileSystem.cpp(532, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(534, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(540, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(574, 7):  func_name_special {Function name(caching_init) should not contains special characters or underbars}
CachingFileSystem.cpp(591, 6):  func_name_special {Function name(caching_destroy) should not contains special characters or underbars}
CachingFileSystem.cpp(615, 5):  func_name_special {Function name(caching_ioctl) should not contains special characters or underbars}
CachingFileSystem.cpp(625, 0):  indent_tab {Do not use space for indent}
CachingFileSystem.cpp(653, 6):  func_name_special {Function name(init_caching_oper) should not contains special characters or underbars}
CachingFileSystem.cpp(775, 7):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(775, 52):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(781, 7):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(781, 52):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(788, 7):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(788, 45):  opeartor_spaces {Provide spaces b/w operator '<<'}
CachingFileSystem.cpp(795, 2):  brace_line {The brace should be located in seperate line}
CachingFileSystem.cpp(797, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
CachingFileSystem.cpp(798, 0):  indent_tab {Do not use space for indent}
DataBlock.cpp(10, 12):  func_comment_imp {Doxygen Comment should be provided in front of function (DataBlock::DataBlock) in impl file.}
DataBlock.cpp(13, 0):  indent_tab {Do not use space for indent}
DataBlock.cpp(19, 26):  func_comment_imp {Doxygen Comment should be provided in front of function (DataBlock::getUseCount) in impl file.}
DataBlock.cpp(24, 17):  func_comment_imp {Doxygen Comment should be provided in front of function (DataBlock::increaseUseCount) in impl file.}
DataBlock.cpp(29, 24):  func_comment_imp {Doxygen Comment should be provided in front of function (operator::) in impl file.}
DataBlock.cpp(31, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(15, 17):  type_braces {The brace for type definition should be located in start of line}
DataBlock.hpp(29, 1):  type_braces {The brace for type definition should be located in same column}
DataBlock.hpp(15, 1):  class_comment {Doxygen Comment should be provided in front of class def(DataBlock).}
DataBlock.hpp(16, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(18, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(20, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(21, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(22, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(24, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(25, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(28, 0):  indent_tab {Do not use space for indent}
DataBlock.hpp(31, 1):  struct_comment {Doxygen Comment should be provided in front of struct/union def(DataBlockCompare).}
DataBlock.hpp(33, 0):  indent_tab {Do not use space for indent}
MyCachingFileSystemGil.cpp(33, 23):  type_braces {The brace for type definition should be located in start of line}
MyCachingFileSystemGil.cpp(49, 1):  type_braces {The brace for type definition should be located in same column}
MyCachingFileSystemGil.cpp(33, 1):  struct_comment {Doxygen Comment should be provided in front of struct/union def(cacheDataBlock).}
MyCachingFileSystemGil.cpp(39, 85):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(40, 2):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(38, 2):  func_comment_imp {Doxygen Comment should be provided in front of function (cacheDataBlock) in impl file.}
MyCachingFileSystemGil.cpp(42, 39):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(47, 2):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(41, 2):  func_comment_imp {Doxygen Comment should be provided in front of function (cacheDataBlock) in impl file.}
MyCachingFileSystemGil.cpp(43, 3):  indent_block {Indent in the block. token(lastAccess) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(51, 22):  type_braces {The brace for type definition should be located in start of line}
MyCachingFileSystemGil.cpp(62, 1):  type_braces {The brace for type definition should be located in same column}
MyCachingFileSystemGil.cpp(51, 1):  struct_comment {Doxygen Comment should be provided in front of struct/union def(caching_state).}
MyCachingFileSystemGil.cpp(66, 21):  type_braces {The brace for type definition should be located in start of line}
MyCachingFileSystemGil.cpp(75, 1):  type_braces {The brace for type definition should be located in same column}
MyCachingFileSystemGil.cpp(66, 1):  class_comment {Doxygen Comment should be provided in front of class def(Compareblocks).}
MyCachingFileSystemGil.cpp(74, 2):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(68, 7):  func_comment_imp {Doxygen Comment should be provided in front of function (operatorbool) in impl file.}
MyCachingFileSystemGil.cpp(71, 3):  indent_block {Indent in the block. token(struct) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(73, 20):  opeartor_spaces {Provide space after operator ,}
MyCachingFileSystemGil.cpp(73, 22):  opeartor_spaces {Provide space after operator ,}
MyCachingFileSystemGil.cpp(80, 16):  type_braces {The brace for type definition should be located in start of line}
MyCachingFileSystemGil.cpp(86, 1):  type_braces {The brace for type definition should be located in same column}
MyCachingFileSystemGil.cpp(94, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(94, 101):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(123, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(95, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(97, 3):  indent_block {Indent in the block. token(case) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(114, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(115, 3):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(117, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(120, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(120, 4):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(122, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(127, 13):  func_name_special {Function name(caching_fullpath) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(127, 73):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(131, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(139, 5):  func_name_special {Function name(caching_getattr) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(139, 61):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(152, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(145, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(150, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(166, 5):  func_name_special {Function name(caching_fgetattr) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(166, 89):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(169, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(182, 5):  func_name_special {Function name(caching_access) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(182, 48):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(188, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(200, 5):  func_name_special {Function name(caching_open) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(200, 63):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(211, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(207, 2):  missing_braces {Use brace for even one statement in if/while/for clause}
MyCachingFileSystemGil.cpp(216, 60):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(232, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(217, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(217, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(218, 10):  brace_line_align {The brace should be located in same column}
MyCachingFileSystemGil.cpp(220, 3):  indent_block {Indent in the block. token(if) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(220, 3):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(221, 4):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(224, 4):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(224, 6):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(226, 4):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(228, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(229, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(236, 56):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(245, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(237, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(237, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(238, 10):  brace_line_align {The brace should be located in same column}
MyCachingFileSystemGil.cpp(239, 3):  indent_block {Indent in the block. token(if) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(239, 3):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(241, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(242, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(250, 79):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(259, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(252, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(255, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(255, 4):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(258, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(266, 64):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(278, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(272, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(274, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(289, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(290, 3):  align_long_param_list {Incorrect align on long parameter list in front of 'char', it should be aligen in column 28.}
MyCachingFileSystemGil.cpp(290, 15):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(303, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(292, 2):  indent_block {Indent in the block. token(int) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(293, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(296, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(297, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(299, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(308, 68):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(310, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(323, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(323, 5):  func_name_special {Function name(caching_read) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(323, 101):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(364, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(341, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(346, 3):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(353, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(353, 5):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(357, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(360, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(389, 5):  func_name_special {Function name(caching_flush) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(389, 64):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(391, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(407, 5):  func_name_special {Function name(caching_release) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(407, 66):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(409, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(418, 5):  func_name_special {Function name(caching_opendir) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(418, 66):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(429, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(425, 2):  missing_braces {Use brace for even one statement in if/while/for clause}
MyCachingFileSystemGil.cpp(452, 5):  func_name_special {Function name(caching_readdir) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(453, 3):  align_long_param_list {Incorrect align on long parameter list in front of 'struct', it should be aligen in column 21.}
MyCachingFileSystemGil.cpp(453, 30):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(482, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(454, 2):  indent_block {Indent in the block. token(int) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(466, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(469, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(476, 3):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(478, 3):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(479, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(488, 5):  func_name_special {Function name(caching_releasedir) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(488, 69):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(492, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(495, 5):  func_name_special {Function name(caching_rename) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(495, 59):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(513, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(525, 7):  func_name_special {Function name(caching_init) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(525, 49):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(527, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(534, 6):  func_name_special {Function name(caching_destroy) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(534, 38):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(539, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(545, 50):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(560, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(555, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(557, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(574, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(574, 5):  func_name_special {Function name(caching_ioctl) should not contains special characters or underbars}
MyCachingFileSystemGil.cpp(574, 110):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(591, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(581, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(581, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(582, 10):  brace_line_align {The brace should be located in same column}
MyCachingFileSystemGil.cpp(583, 3):  indent_block {Indent in the block. token(handleError) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(588, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(593, 34):  function_braces {The brace for function definition should be located in start of line}
MyCachingFileSystemGil.cpp(661, 1):  function_braces {The brace for function definition should be located in same column}
MyCachingFileSystemGil.cpp(597, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(600, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(610, 2):  align_long_cond_list {Incorrect align on condition list '||'. It should be aligned in column 9.}
MyCachingFileSystemGil.cpp(609, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(610, 71):  brace_line_align {The brace should be located in same column}
MyCachingFileSystemGil.cpp(609, 34):  opeartor_spaces {Provide spaces b/w operator '||'}
MyCachingFileSystemGil.cpp(610, 0):  long_line {Lines should very rarely be longer than 100 characters}
MyCachingFileSystemGil.cpp(610, 72):  indent_block {Indent in the block. token(handleError) seems to be located left column of previsous brace}
MyCachingFileSystemGil.cpp(610, 111):  opeartor_spaces {Provide space after operator ,}
MyCachingFileSystemGil.cpp(611, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
MyCachingFileSystemGil.cpp(654, 2):  brace_line {The brace should be located in seperate line}
MyCachingFileSystemGil.cpp(656, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
Test.hpp(1, 0):  file_comm {Please provide file info comment in front of file}
Test.hpp(1, 1):  class_comment {Doxygen Comment should be provided in front of class def(Test).}
test.cpp(20, 5):  func_comment_imp {Doxygen Comment should be provided in front of function (main) in impl file.}
test.cpp(25, 42):  opeartor_spaces {Provide space after operator ,}
test.cpp(42, 49):  opeartor_spaces {Provide space after operator ,}
test.cpp(62, 42):  opeartor_spaces {Provide space after operator ,}
test.cpp(81, 54):  opeartor_spaces {Provide space after operator ,}
log.h(13, 9):  macro_lower {Do not use lower case (log_struct) for macro value}
log.h(14, 0):  indent_tab {Do not use space for indent}
log.h(16, 7):  func_name_special {Function name(log_open) should not contains special characters or underbars}
log.h(16, 7):  func_comment_h {Doxygen Comment should be provided in front of function (log_open) in header.}
log.h(17, 6):  func_name_special {Function name(log_conn) should not contains special characters or underbars}
log.h(17, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_conn) in header.}
log.h(18, 6):  func_name_special {Function name(log_fi) should not contains special characters or underbars}
log.h(18, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_fi) in header.}
log.h(19, 6):  func_name_special {Function name(log_stat) should not contains special characters or underbars}
log.h(19, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_stat) in header.}
log.h(20, 6):  func_name_special {Function name(log_statvfs) should not contains special characters or underbars}
log.h(20, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_statvfs) in header.}
log.h(21, 6):  func_name_special {Function name(log_utime) should not contains special characters or underbars}
log.h(21, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_utime) in header.}
log.h(23, 6):  func_name_special {Function name(log_msg) should not contains special characters or underbars}
log.h(23, 6):  func_comment_h {Doxygen Comment should be provided in front of function (log_msg) in header.}
fuse.h(88, 24):  type_braces {The brace for type definition should be located in start of line}
fuse.h(578, 1):  type_braces {The brace for type definition should be located in same column}
fuse.h(585, 21):  type_braces {The brace for type definition should be located in start of line}
fuse.h(603, 1):  type_braces {The brace for type definition should be located in same column}
fuse.h(632, 9):  macro_lower {Do not use lower case (fuse_main) for macro value}
fuse.h(902, 20):  type_braces {The brace for type definition should be located in start of line}
fuse.h(928, 1):  type_braces {The brace for type definition should be located in same column}
fuse.h(1000, 13):  macro_lower {Do not use lower case (fuse_main) for macro value}
fuse.h(1007, 13):  macro_lower {Do not use lower case (fuse_main) for macro value}
bbfs.c(49, 12):  func_name_special {Function name(bb_error) should not contains special characters or underbars}
bbfs.c(51, 0):  indent_tab {Do not use space for indent}
bbfs.c(53, 0):  indent_tab {Do not use space for indent}
bbfs.c(55, 0):  indent_tab {Do not use space for indent}
bbfs.c(65, 13):  func_name_special {Function name(bb_fullpath) should not contains special characters or underbars}
bbfs.c(67, 0):  indent_tab {Do not use space for indent}
bbfs.c(68, 0):  indent_tab {Do not use space for indent}
bbfs.c(71, 0):  indent_tab {Do not use space for indent}
bbfs.c(86, 5):  func_name_special {Function name(bb_getattr) should not contains special characters or underbars}
bbfs.c(88, 0):  indent_tab {Do not use space for indent}
bbfs.c(89, 0):  indent_tab {Do not use space for indent}
bbfs.c(91, 0):  indent_tab {Do not use space for indent}
bbfs.c(93, 0):  indent_tab {Do not use space for indent}
bbfs.c(95, 0):  indent_tab {Do not use space for indent}
bbfs.c(96, 0):  indent_tab {Do not use space for indent}
bbfs.c(96, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(99, 0):  indent_tab {Do not use space for indent}
bbfs.c(101, 0):  indent_tab {Do not use space for indent}
bbfs.c(116, 5):  func_name_special {Function name(bb_readlink) should not contains special characters or underbars}
bbfs.c(118, 0):  indent_tab {Do not use space for indent}
bbfs.c(119, 0):  indent_tab {Do not use space for indent}
bbfs.c(121, 0):  indent_tab {Do not use space for indent}
bbfs.c(123, 0):  indent_tab {Do not use space for indent}
bbfs.c(125, 0):  indent_tab {Do not use space for indent}
bbfs.c(126, 0):  indent_tab {Do not use space for indent}
bbfs.c(126, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(128, 0):  indent_tab {Do not use space for indent}
bbfs.c(128, 5):  brace_line {The brace should be located in seperate line}
bbfs.c(129, 2):  indent_block {Indent in the block. token(link) seems to be located left column of previsous brace}
bbfs.c(131, 0):  indent_tab {Do not use space for indent}
bbfs.c(131, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(133, 0):  indent_tab {Do not use space for indent}
bbfs.c(142, 5):  func_name_special {Function name(bb_mknod) should not contains special characters or underbars}
bbfs.c(144, 0):  indent_tab {Do not use space for indent}
bbfs.c(145, 0):  indent_tab {Do not use space for indent}
bbfs.c(147, 0):  indent_tab {Do not use space for indent}
bbfs.c(149, 0):  indent_tab {Do not use space for indent}
bbfs.c(153, 0):  indent_tab {Do not use space for indent}
bbfs.c(153, 5):  brace_line {The brace should be located in seperate line}
bbfs.c(154, 0):  indent_tab {Do not use space for indent}
bbfs.c(155, 2):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(157, 0):  indent_tab {Do not use space for indent}
bbfs.c(157, 9):  brace_line {The brace should be located in seperate line}
bbfs.c(158, 0):  indent_tab {Do not use space for indent}
bbfs.c(159, 6):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(161, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(162, 0):  indent_tab {Do not use space for indent}
bbfs.c(162, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(163, 2):  brace_line {The brace should be located in seperate line}
bbfs.c(165, 6):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(167, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(167, 4):  brace_line {The brace should be located in seperate line}
bbfs.c(169, 6):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(171, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(173, 0):  indent_tab {Do not use space for indent}
bbfs.c(177, 5):  func_name_special {Function name(bb_mkdir) should not contains special characters or underbars}
bbfs.c(179, 0):  indent_tab {Do not use space for indent}
bbfs.c(180, 0):  indent_tab {Do not use space for indent}
bbfs.c(182, 0):  indent_tab {Do not use space for indent}
bbfs.c(184, 0):  indent_tab {Do not use space for indent}
bbfs.c(186, 0):  indent_tab {Do not use space for indent}
bbfs.c(187, 0):  indent_tab {Do not use space for indent}
bbfs.c(187, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(190, 0):  indent_tab {Do not use space for indent}
bbfs.c(194, 5):  func_name_special {Function name(bb_unlink) should not contains special characters or underbars}
bbfs.c(196, 0):  indent_tab {Do not use space for indent}
bbfs.c(197, 0):  indent_tab {Do not use space for indent}
bbfs.c(199, 0):  indent_tab {Do not use space for indent}
bbfs.c(201, 0):  indent_tab {Do not use space for indent}
bbfs.c(203, 0):  indent_tab {Do not use space for indent}
bbfs.c(204, 0):  indent_tab {Do not use space for indent}
bbfs.c(204, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(207, 0):  indent_tab {Do not use space for indent}
bbfs.c(211, 5):  func_name_special {Function name(bb_rmdir) should not contains special characters or underbars}
bbfs.c(213, 0):  indent_tab {Do not use space for indent}
bbfs.c(214, 0):  indent_tab {Do not use space for indent}
bbfs.c(216, 0):  indent_tab {Do not use space for indent}
bbfs.c(218, 0):  indent_tab {Do not use space for indent}
bbfs.c(220, 0):  indent_tab {Do not use space for indent}
bbfs.c(221, 0):  indent_tab {Do not use space for indent}
bbfs.c(221, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(224, 0):  indent_tab {Do not use space for indent}
bbfs.c(232, 5):  func_name_special {Function name(bb_symlink) should not contains special characters or underbars}
bbfs.c(234, 0):  indent_tab {Do not use space for indent}
bbfs.c(235, 0):  indent_tab {Do not use space for indent}
bbfs.c(237, 0):  indent_tab {Do not use space for indent}
bbfs.c(239, 0):  indent_tab {Do not use space for indent}
bbfs.c(241, 0):  indent_tab {Do not use space for indent}
bbfs.c(242, 0):  indent_tab {Do not use space for indent}
bbfs.c(242, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(245, 0):  indent_tab {Do not use space for indent}
bbfs.c(250, 5):  func_name_special {Function name(bb_rename) should not contains special characters or underbars}
bbfs.c(252, 0):  indent_tab {Do not use space for indent}
bbfs.c(253, 0):  indent_tab {Do not use space for indent}
bbfs.c(254, 0):  indent_tab {Do not use space for indent}
bbfs.c(256, 0):  indent_tab {Do not use space for indent}
bbfs.c(258, 0):  indent_tab {Do not use space for indent}
bbfs.c(259, 0):  indent_tab {Do not use space for indent}
bbfs.c(261, 0):  indent_tab {Do not use space for indent}
bbfs.c(262, 0):  indent_tab {Do not use space for indent}
bbfs.c(262, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(265, 0):  indent_tab {Do not use space for indent}
bbfs.c(269, 5):  func_name_special {Function name(bb_link) should not contains special characters or underbars}
bbfs.c(271, 0):  indent_tab {Do not use space for indent}
bbfs.c(272, 0):  indent_tab {Do not use space for indent}
bbfs.c(274, 0):  indent_tab {Do not use space for indent}
bbfs.c(276, 0):  indent_tab {Do not use space for indent}
bbfs.c(277, 0):  indent_tab {Do not use space for indent}
bbfs.c(279, 0):  indent_tab {Do not use space for indent}
bbfs.c(280, 0):  indent_tab {Do not use space for indent}
bbfs.c(280, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(283, 0):  indent_tab {Do not use space for indent}
bbfs.c(287, 5):  func_name_special {Function name(bb_chmod) should not contains special characters or underbars}
bbfs.c(289, 0):  indent_tab {Do not use space for indent}
bbfs.c(290, 0):  indent_tab {Do not use space for indent}
bbfs.c(292, 0):  indent_tab {Do not use space for indent}
bbfs.c(294, 0):  indent_tab {Do not use space for indent}
bbfs.c(296, 0):  indent_tab {Do not use space for indent}
bbfs.c(297, 0):  indent_tab {Do not use space for indent}
bbfs.c(297, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(300, 0):  indent_tab {Do not use space for indent}
bbfs.c(304, 5):  func_name_special {Function name(bb_chown) should not contains special characters or underbars}
bbfs.c(307, 0):  indent_tab {Do not use space for indent}
bbfs.c(308, 0):  indent_tab {Do not use space for indent}
bbfs.c(310, 0):  indent_tab {Do not use space for indent}
bbfs.c(312, 0):  indent_tab {Do not use space for indent}
bbfs.c(314, 0):  indent_tab {Do not use space for indent}
bbfs.c(315, 0):  indent_tab {Do not use space for indent}
bbfs.c(315, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(318, 0):  indent_tab {Do not use space for indent}
bbfs.c(322, 5):  func_name_special {Function name(bb_truncate) should not contains special characters or underbars}
bbfs.c(324, 0):  indent_tab {Do not use space for indent}
bbfs.c(325, 0):  indent_tab {Do not use space for indent}
bbfs.c(327, 0):  indent_tab {Do not use space for indent}
bbfs.c(329, 0):  indent_tab {Do not use space for indent}
bbfs.c(331, 0):  indent_tab {Do not use space for indent}
bbfs.c(332, 0):  indent_tab {Do not use space for indent}
bbfs.c(332, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(335, 0):  indent_tab {Do not use space for indent}
bbfs.c(340, 5):  func_name_special {Function name(bb_utime) should not contains special characters or underbars}
bbfs.c(340, 5):  func_comment_imp {Doxygen Comment should be provided in front of function (bb_utime) in impl file.}
bbfs.c(342, 0):  indent_tab {Do not use space for indent}
bbfs.c(343, 0):  indent_tab {Do not use space for indent}
bbfs.c(345, 0):  indent_tab {Do not use space for indent}
bbfs.c(347, 0):  indent_tab {Do not use space for indent}
bbfs.c(349, 0):  indent_tab {Do not use space for indent}
bbfs.c(350, 0):  indent_tab {Do not use space for indent}
bbfs.c(350, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(353, 0):  indent_tab {Do not use space for indent}
bbfs.c(366, 5):  func_name_special {Function name(bb_open) should not contains special characters or underbars}
bbfs.c(368, 0):  indent_tab {Do not use space for indent}
bbfs.c(369, 0):  indent_tab {Do not use space for indent}
bbfs.c(370, 0):  indent_tab {Do not use space for indent}
bbfs.c(372, 0):  indent_tab {Do not use space for indent}
bbfs.c(374, 0):  indent_tab {Do not use space for indent}
bbfs.c(376, 0):  indent_tab {Do not use space for indent}
bbfs.c(377, 0):  indent_tab {Do not use space for indent}
bbfs.c(377, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(380, 0):  indent_tab {Do not use space for indent}
bbfs.c(381, 0):  indent_tab {Do not use space for indent}
bbfs.c(383, 0):  indent_tab {Do not use space for indent}
bbfs.c(402, 5):  func_name_special {Function name(bb_read) should not contains special characters or underbars}
bbfs.c(404, 0):  indent_tab {Do not use space for indent}
bbfs.c(406, 0):  indent_tab {Do not use space for indent}
bbfs.c(409, 0):  indent_tab {Do not use space for indent}
bbfs.c(411, 0):  indent_tab {Do not use space for indent}
bbfs.c(412, 0):  indent_tab {Do not use space for indent}
bbfs.c(412, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(415, 0):  indent_tab {Do not use space for indent}
bbfs.c(428, 5):  func_name_special {Function name(bb_write) should not contains special characters or underbars}
bbfs.c(429, 7):  align_long_param_list {Incorrect align on long parameter list in front of 'struct', it should be aligen in column 14.}
bbfs.c(431, 0):  indent_tab {Do not use space for indent}
bbfs.c(433, 0):  indent_tab {Do not use space for indent}
bbfs.c(437, 0):  indent_tab {Do not use space for indent}
bbfs.c(439, 0):  indent_tab {Do not use space for indent}
bbfs.c(440, 0):  indent_tab {Do not use space for indent}
bbfs.c(440, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(443, 0):  indent_tab {Do not use space for indent}
bbfs.c(453, 5):  func_name_special {Function name(bb_statfs) should not contains special characters or underbars}
bbfs.c(455, 0):  indent_tab {Do not use space for indent}
bbfs.c(456, 0):  indent_tab {Do not use space for indent}
bbfs.c(458, 0):  indent_tab {Do not use space for indent}
bbfs.c(460, 0):  indent_tab {Do not use space for indent}
bbfs.c(463, 0):  indent_tab {Do not use space for indent}
bbfs.c(464, 0):  indent_tab {Do not use space for indent}
bbfs.c(464, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(467, 0):  indent_tab {Do not use space for indent}
bbfs.c(469, 0):  indent_tab {Do not use space for indent}
bbfs.c(495, 5):  func_name_special {Function name(bb_flush) should not contains special characters or underbars}
bbfs.c(497, 0):  indent_tab {Do not use space for indent}
bbfs.c(499, 0):  indent_tab {Do not use space for indent}
bbfs.c(501, 0):  indent_tab {Do not use space for indent}
bbfs.c(503, 0):  indent_tab {Do not use space for indent}
bbfs.c(520, 5):  func_name_special {Function name(bb_release) should not contains special characters or underbars}
bbfs.c(522, 0):  indent_tab {Do not use space for indent}
bbfs.c(524, 0):  indent_tab {Do not use space for indent}
bbfs.c(526, 0):  indent_tab {Do not use space for indent}
bbfs.c(530, 0):  indent_tab {Do not use space for indent}
bbfs.c(532, 0):  indent_tab {Do not use space for indent}
bbfs.c(542, 5):  func_name_special {Function name(bb_fsync) should not contains special characters or underbars}
bbfs.c(544, 0):  indent_tab {Do not use space for indent}
bbfs.c(546, 0):  indent_tab {Do not use space for indent}
bbfs.c(548, 0):  indent_tab {Do not use space for indent}
bbfs.c(552, 0):  indent_tab {Do not use space for indent}
bbfs.c(552, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(554, 0):  indent_tab {Do not use space for indent}
bbfs.c(554, 5):  missing_braces {Use brace for even one statement in else clause}
bbfs.c(558, 0):  indent_tab {Do not use space for indent}
bbfs.c(558, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(561, 0):  indent_tab {Do not use space for indent}
bbfs.c(566, 5):  func_name_special {Function name(bb_setxattr) should not contains special characters or underbars}
bbfs.c(568, 0):  indent_tab {Do not use space for indent}
bbfs.c(569, 0):  indent_tab {Do not use space for indent}
bbfs.c(571, 0):  indent_tab {Do not use space for indent}
bbfs.c(573, 0):  indent_tab {Do not use space for indent}
bbfs.c(575, 0):  indent_tab {Do not use space for indent}
bbfs.c(576, 0):  indent_tab {Do not use space for indent}
bbfs.c(576, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(579, 0):  indent_tab {Do not use space for indent}
bbfs.c(583, 5):  func_name_special {Function name(bb_getxattr) should not contains special characters or underbars}
bbfs.c(585, 0):  indent_tab {Do not use space for indent}
bbfs.c(586, 0):  indent_tab {Do not use space for indent}
bbfs.c(588, 0):  indent_tab {Do not use space for indent}
bbfs.c(590, 0):  indent_tab {Do not use space for indent}
bbfs.c(592, 0):  indent_tab {Do not use space for indent}
bbfs.c(593, 0):  indent_tab {Do not use space for indent}
bbfs.c(593, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(595, 0):  indent_tab {Do not use space for indent}
bbfs.c(595, 5):  missing_braces {Use brace for even one statement in else clause}
bbfs.c(598, 0):  indent_tab {Do not use space for indent}
bbfs.c(602, 5):  func_name_special {Function name(bb_listxattr) should not contains special characters or underbars}
bbfs.c(604, 0):  indent_tab {Do not use space for indent}
bbfs.c(605, 0):  indent_tab {Do not use space for indent}
bbfs.c(606, 0):  indent_tab {Do not use space for indent}
bbfs.c(608, 0):  indent_tab {Do not use space for indent}
bbfs.c(611, 0):  indent_tab {Do not use space for indent}
bbfs.c(613, 0):  indent_tab {Do not use space for indent}
bbfs.c(614, 0):  indent_tab {Do not use space for indent}
bbfs.c(614, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(617, 0):  indent_tab {Do not use space for indent}
bbfs.c(618, 0):  indent_tab {Do not use space for indent}
bbfs.c(618, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(618, 62):  opeartor_spaces {Provide spaces b/w operator '+'}
bbfs.c(621, 0):  indent_tab {Do not use space for indent}
bbfs.c(625, 5):  func_name_special {Function name(bb_removexattr) should not contains special characters or underbars}
bbfs.c(627, 0):  indent_tab {Do not use space for indent}
bbfs.c(628, 0):  indent_tab {Do not use space for indent}
bbfs.c(630, 0):  indent_tab {Do not use space for indent}
bbfs.c(632, 0):  indent_tab {Do not use space for indent}
bbfs.c(634, 0):  indent_tab {Do not use space for indent}
bbfs.c(635, 0):  indent_tab {Do not use space for indent}
bbfs.c(635, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(638, 0):  indent_tab {Do not use space for indent}
bbfs.c(649, 5):  func_name_special {Function name(bb_opendir) should not contains special characters or underbars}
bbfs.c(651, 0):  indent_tab {Do not use space for indent}
bbfs.c(652, 0):  indent_tab {Do not use space for indent}
bbfs.c(653, 0):  indent_tab {Do not use space for indent}
bbfs.c(655, 0):  indent_tab {Do not use space for indent}
bbfs.c(657, 0):  indent_tab {Do not use space for indent}
bbfs.c(659, 0):  indent_tab {Do not use space for indent}
bbfs.c(660, 0):  indent_tab {Do not use space for indent}
bbfs.c(660, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(663, 0):  indent_tab {Do not use space for indent}
bbfs.c(665, 0):  indent_tab {Do not use space for indent}
bbfs.c(667, 0):  indent_tab {Do not use space for indent}
bbfs.c(691, 5):  func_name_special {Function name(bb_readdir) should not contains special characters or underbars}
bbfs.c(692, 9):  align_long_param_list {Incorrect align on long parameter list in front of 'struct', it should be aligen in column 16.}
bbfs.c(694, 0):  indent_tab {Do not use space for indent}
bbfs.c(695, 0):  indent_tab {Do not use space for indent}
bbfs.c(696, 0):  indent_tab {Do not use space for indent}
bbfs.c(698, 0):  indent_tab {Do not use space for indent}
bbfs.c(701, 0):  indent_tab {Do not use space for indent}
bbfs.c(707, 0):  indent_tab {Do not use space for indent}
bbfs.c(708, 0):  indent_tab {Do not use space for indent}
bbfs.c(708, 5):  brace_line {The brace should be located in seperate line}
bbfs.c(709, 2):  indent_block {Indent in the block. token(retstat) seems to be located left column of previsous brace}
bbfs.c(711, 0):  indent_tab {Do not use space for indent}
bbfs.c(711, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(717, 0):  indent_tab {Do not use space for indent}
bbfs.c(718, 2):  indent_block {Indent in the block. token(log_msg) seems to be located left column of previsous brace}
bbfs.c(719, 2):  brace_line {The brace should be located in seperate line}
bbfs.c(721, 0):  indent_tab {Do not use space for indent}
bbfs.c(723, 2):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(724, 0):  indent_tab {Do not use space for indent}
bbfs.c(724, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(726, 0):  indent_tab {Do not use space for indent}
bbfs.c(728, 0):  indent_tab {Do not use space for indent}
bbfs.c(735, 5):  func_name_special {Function name(bb_releasedir) should not contains special characters or underbars}
bbfs.c(737, 0):  indent_tab {Do not use space for indent}
bbfs.c(739, 0):  indent_tab {Do not use space for indent}
bbfs.c(741, 0):  indent_tab {Do not use space for indent}
bbfs.c(743, 0):  indent_tab {Do not use space for indent}
bbfs.c(745, 0):  indent_tab {Do not use space for indent}
bbfs.c(757, 5):  func_name_special {Function name(bb_fsyncdir) should not contains special characters or underbars}
bbfs.c(759, 0):  indent_tab {Do not use space for indent}
bbfs.c(761, 0):  indent_tab {Do not use space for indent}
bbfs.c(763, 0):  indent_tab {Do not use space for indent}
bbfs.c(765, 0):  indent_tab {Do not use space for indent}
bbfs.c(785, 7):  func_name_special {Function name(bb_init) should not contains special characters or underbars}
bbfs.c(787, 0):  indent_tab {Do not use space for indent}
bbfs.c(789, 0):  indent_tab {Do not use space for indent}
bbfs.c(790, 0):  indent_tab {Do not use space for indent}
bbfs.c(792, 0):  indent_tab {Do not use space for indent}
bbfs.c(802, 6):  func_name_special {Function name(bb_destroy) should not contains special characters or underbars}
bbfs.c(804, 0):  indent_tab {Do not use space for indent}
bbfs.c(818, 5):  func_name_special {Function name(bb_access) should not contains special characters or underbars}
bbfs.c(820, 0):  indent_tab {Do not use space for indent}
bbfs.c(821, 0):  indent_tab {Do not use space for indent}
bbfs.c(823, 0):  indent_tab {Do not use space for indent}
bbfs.c(825, 0):  indent_tab {Do not use space for indent}
bbfs.c(827, 0):  indent_tab {Do not use space for indent}
bbfs.c(829, 0):  indent_tab {Do not use space for indent}
bbfs.c(829, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(832, 0):  indent_tab {Do not use space for indent}
bbfs.c(847, 5):  func_name_special {Function name(bb_create) should not contains special characters or underbars}
bbfs.c(849, 0):  indent_tab {Do not use space for indent}
bbfs.c(850, 0):  indent_tab {Do not use space for indent}
bbfs.c(851, 0):  indent_tab {Do not use space for indent}
bbfs.c(853, 0):  indent_tab {Do not use space for indent}
bbfs.c(855, 0):  indent_tab {Do not use space for indent}
bbfs.c(857, 0):  indent_tab {Do not use space for indent}
bbfs.c(858, 0):  indent_tab {Do not use space for indent}
bbfs.c(858, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(861, 0):  indent_tab {Do not use space for indent}
bbfs.c(863, 0):  indent_tab {Do not use space for indent}
bbfs.c(865, 0):  indent_tab {Do not use space for indent}
bbfs.c(880, 5):  func_name_special {Function name(bb_ftruncate) should not contains special characters or underbars}
bbfs.c(882, 0):  indent_tab {Do not use space for indent}
bbfs.c(884, 0):  indent_tab {Do not use space for indent}
bbfs.c(886, 0):  indent_tab {Do not use space for indent}
bbfs.c(888, 0):  indent_tab {Do not use space for indent}
bbfs.c(889, 0):  indent_tab {Do not use space for indent}
bbfs.c(889, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(892, 0):  indent_tab {Do not use space for indent}
bbfs.c(907, 5):  func_name_special {Function name(bb_fgetattr) should not contains special characters or underbars}
bbfs.c(909, 0):  indent_tab {Do not use space for indent}
bbfs.c(911, 0):  indent_tab {Do not use space for indent}
bbfs.c(913, 0):  indent_tab {Do not use space for indent}
bbfs.c(919, 0):  indent_tab {Do not use space for indent}
bbfs.c(919, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(922, 0):  indent_tab {Do not use space for indent}
bbfs.c(923, 0):  indent_tab {Do not use space for indent}
bbfs.c(923, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(926, 0):  indent_tab {Do not use space for indent}
bbfs.c(928, 0):  indent_tab {Do not use space for indent}
bbfs.c(931, 34):  type_braces {The brace for type definition should be located in start of line}
bbfs.c(973, 1):  type_braces {The brace for type definition should be located in same column}
bbfs.c(931, 1):  struct_comment {Doxygen Comment should be provided in front of struct/union def(bb_oper).}
bbfs.c(932, 0):  indent_tab {Do not use space for indent}
bbfs.c(933, 0):  indent_tab {Do not use space for indent}
bbfs.c(935, 0):  indent_tab {Do not use space for indent}
bbfs.c(936, 0):  indent_tab {Do not use space for indent}
bbfs.c(937, 0):  indent_tab {Do not use space for indent}
bbfs.c(938, 0):  indent_tab {Do not use space for indent}
bbfs.c(939, 0):  indent_tab {Do not use space for indent}
bbfs.c(940, 0):  indent_tab {Do not use space for indent}
bbfs.c(941, 0):  indent_tab {Do not use space for indent}
bbfs.c(942, 0):  indent_tab {Do not use space for indent}
bbfs.c(943, 0):  indent_tab {Do not use space for indent}
bbfs.c(944, 0):  indent_tab {Do not use space for indent}
bbfs.c(945, 0):  indent_tab {Do not use space for indent}
bbfs.c(946, 0):  indent_tab {Do not use space for indent}
bbfs.c(947, 0):  indent_tab {Do not use space for indent}
bbfs.c(948, 0):  indent_tab {Do not use space for indent}
bbfs.c(949, 0):  indent_tab {Do not use space for indent}
bbfs.c(951, 0):  indent_tab {Do not use space for indent}
bbfs.c(952, 0):  indent_tab {Do not use space for indent}
bbfs.c(953, 0):  indent_tab {Do not use space for indent}
bbfs.c(954, 0):  indent_tab {Do not use space for indent}
bbfs.c(957, 0):  indent_tab {Do not use space for indent}
bbfs.c(958, 0):  indent_tab {Do not use space for indent}
bbfs.c(959, 0):  indent_tab {Do not use space for indent}
bbfs.c(960, 0):  indent_tab {Do not use space for indent}
bbfs.c(963, 0):  indent_tab {Do not use space for indent}
bbfs.c(964, 0):  indent_tab {Do not use space for indent}
bbfs.c(965, 0):  indent_tab {Do not use space for indent}
bbfs.c(966, 0):  indent_tab {Do not use space for indent}
bbfs.c(967, 0):  indent_tab {Do not use space for indent}
bbfs.c(968, 0):  indent_tab {Do not use space for indent}
bbfs.c(969, 0):  indent_tab {Do not use space for indent}
bbfs.c(970, 0):  indent_tab {Do not use space for indent}
bbfs.c(971, 0):  indent_tab {Do not use space for indent}
bbfs.c(972, 0):  indent_tab {Do not use space for indent}
bbfs.c(975, 6):  func_name_special {Function name(bb_usage) should not contains special characters or underbars}
bbfs.c(977, 0):  indent_tab {Do not use space for indent}
bbfs.c(978, 0):  indent_tab {Do not use space for indent}
bbfs.c(983, 0):  indent_tab {Do not use space for indent}
bbfs.c(984, 0):  indent_tab {Do not use space for indent}
bbfs.c(995, 0):  indent_tab {Do not use space for indent}
bbfs.c(995, 5):  brace_line {The brace should be located in seperate line}
bbfs.c(996, 2):  indent_block {Indent in the block. token(fprintf) seems to be located left column of previsous brace}
bbfs.c(998, 0):  indent_tab {Do not use space for indent}
bbfs.c(998, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(1005, 0):  indent_tab {Do not use space for indent}
bbfs.c(1005, 5):  missing_braces {Use brace for even one statement in if/while/for clause}
bbfs.c(1008, 0):  indent_tab {Do not use space for indent}
bbfs.c(1009, 0):  indent_tab {Do not use space for indent}
bbfs.c(1009, 5):  brace_line {The brace should be located in seperate line}
bbfs.c(1010, 2):  indent_block {Indent in the block. token(perror) seems to be located left column of previsous brace}
bbfs.c(1012, 0):  indent_tab {Do not use space for indent}
bbfs.c(1012, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
bbfs.c(1016, 0):  indent_tab {Do not use space for indent}
bbfs.c(1017, 0):  indent_tab {Do not use space for indent}
bbfs.c(1018, 0):  indent_tab {Do not use space for indent}
bbfs.c(1019, 0):  indent_tab {Do not use space for indent}
bbfs.c(1021, 0):  indent_tab {Do not use space for indent}
bbfs.c(1024, 0):  indent_tab {Do not use space for indent}
bbfs.c(1025, 0):  indent_tab {Do not use space for indent}
bbfs.c(1026, 0):  indent_tab {Do not use space for indent}
bbfs.c(1028, 0):  indent_tab {Do not use space for indent}
params.h(26, 17):  type_braces {The brace for type definition should be located in start of line}
params.h(29, 1):  type_braces {The brace for type definition should be located in same column}
params.h(26, 1):  struct_comment {Doxygen Comment should be provided in front of struct/union def(bb_state).}
params.h(27, 0):  indent_tab {Do not use space for indent}
params.h(28, 0):  indent_tab {Do not use space for indent}
log.c(26, 7):  func_name_special {Function name(log_open) should not contains special characters or underbars}
log.c(26, 7):  func_comment_imp {Doxygen Comment should be provided in front of function (log_open) in impl file.}
log.c(28, 0):  indent_tab {Do not use space for indent}
log.c(32, 0):  indent_tab {Do not use space for indent}
log.c(33, 0):  indent_tab {Do not use space for indent}
log.c(33, 5):  brace_line {The brace should be located in seperate line}
log.c(34, 2):  indent_block {Indent in the block. token(perror) seems to be located left column of previsous brace}
log.c(36, 0):  indent_tab {Do not use space for indent}
log.c(36, 5):  matching_braces_align {Matching Braces inside of function should be located in the same column}
log.c(39, 0):  indent_tab {Do not use space for indent}
log.c(41, 0):  indent_tab {Do not use space for indent}
log.c(44, 6):  func_name_special {Function name(log_msg) should not contains special characters or underbars}
log.c(44, 6):  func_comment_imp {Doxygen Comment should be provided in front of function (log_msg) in impl file.}
log.c(46, 0):  indent_tab {Do not use space for indent}
log.c(47, 0):  indent_tab {Do not use space for indent}
log.c(49, 0):  indent_tab {Do not use space for indent}
log.c(53, 6):  func_name_special {Function name(log_fuse_context) should not contains special characters or underbars}
log.c(53, 6):  func_comment_imp {Doxygen Comment should be provided in front of function (log_fuse_context) in impl file.}
log.c(55, 0):  indent_tab {Do not use space for indent}
log.c(59, 0):  indent_tab {Do not use space for indent}
log.c(59, 31):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(63, 0):  indent_tab {Do not use space for indent}
log.c(63, 30):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(67, 0):  indent_tab {Do not use space for indent}
log.c(67, 30):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(71, 0):  indent_tab {Do not use space for indent}
log.c(71, 30):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(75, 0):  indent_tab {Do not use space for indent}
log.c(75, 39):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(76, 0):  indent_tab {Do not use space for indent}
log.c(76, 69):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(77, 0):  indent_tab {Do not use space for indent}
log.c(77, 69):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(81, 0):  indent_tab {Do not use space for indent}
log.c(81, 32):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(87, 6):  func_name_special {Function name(log_conn) should not contains special characters or underbars}
log.c(89, 0):  indent_tab {Do not use space for indent}
log.c(93, 0):  indent_tab {Do not use space for indent}
log.c(93, 35):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(97, 0):  indent_tab {Do not use space for indent}
log.c(97, 35):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(101, 0):  indent_tab {Do not use space for indent}
log.c(101, 34):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(105, 0):  indent_tab {Do not use space for indent}
log.c(105, 33):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(109, 0):  indent_tab {Do not use space for indent}
log.c(109, 37):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(113, 0):  indent_tab {Do not use space for indent}
log.c(113, 31):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(117, 0):  indent_tab {Do not use space for indent}
log.c(117, 28):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(121, 0):  indent_tab {Do not use space for indent}
log.c(121, 38):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(125, 0):  indent_tab {Do not use space for indent}
log.c(125, 44):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(135, 6):  func_name_special {Function name(log_fi) should not contains special characters or underbars}
log.c(137, 0):  indent_tab {Do not use space for indent}
log.c(141, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(145, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(150, 28):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(155, 28):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(160, 29):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(168, 23):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(172, 31):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(177, 6):  func_name_special {Function name(log_stat) should not contains special characters or underbars}
log.c(179, 0):  indent_tab {Do not use space for indent}
log.c(182, 25):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(185, 25):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(188, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(191, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(194, 25):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(197, 25):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(200, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(203, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(206, 29):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(209, 28):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(212, 29):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(215, 29):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(218, 29):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(222, 6):  func_name_special {Function name(log_statvfs) should not contains special characters or underbars}
log.c(224, 0):  indent_tab {Do not use space for indent}
log.c(227, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(230, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(233, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(236, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(239, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(242, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(245, 26):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(248, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(251, 25):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(254, 27):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(257, 28):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(261, 6):  func_name_special {Function name(log_utime) should not contains special characters or underbars}
log.c(263, 0):  indent_tab {Do not use space for indent}
log.c(266, 0):  indent_tab {Do not use space for indent}
log.c(266, 31):  opeartor_spaces {Provide spaces b/w operator '%'}
log.c(269, 0):  indent_tab {Do not use space for indent}
log.c(269, 32):  opeartor_spaces {Provide spaces b/w operator '%'}
 ** Total Violated Rules      : 18
 ** Total Errors Occurs       : 813
 ** Total Violated Files Count: 13
